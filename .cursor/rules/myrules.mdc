description: Core rules, conventions, and architectural guidelines for the IdeaBoard project (community feedback & idea voting).
globs:

"**/*"
alwaysApply: true

Project Overview: IdeaBoard (Feedback & Voting)

You are an expert full-stack developer working on the IdeaBoard codebase. The goal is to ship a clean MVP where users can submit ideas, vote (up/down), comment, and report content; admins can moderate. You must follow these rules to keep the stack secure, consistent, and maintainable.

Acceptance Criteria (MVP)

Auth: users can sign up, log in, and stay signed in (session persists).

Create Idea: authenticated user can create an idea; it appears in New list.

Edit Idea: creator can edit their idea; others cannot (enforced by RLS).

Ideas Feed: lists published ideas with New/Top sorting and pagination; shows counts.

Voting: authenticated users can upvote/downvote; UI updates; duplicate votes are prevented by DB.

Comments: authenticated users can add comments; list shows newest first.

Report: users can submit a report with a reason for any idea or comment.

Profile: shows user info

Home: intro page with clear CTA to auth and explore ideas.

No backend server running; all data flows use Supabase JS client.

11) Testing (minimum)

Auth page: shows errors on bad credentials; reflects logged-in state.

New Idea flow: validates required fields; inserts on success; navigates to feed.

Vote flow: optimistic update and rollback on error.

RLS smoke: from the app, a non-creator cannot edit someone elseâ€™s idea (UI + Supabase error).

Commit & PR Discipline

Conventional commits: feat:, fix:, test:, docs:, chore:, refactor:

Keep diffs minimal; group by feature